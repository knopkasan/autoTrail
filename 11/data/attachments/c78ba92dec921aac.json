{"challenges":[{"id":"01","name":"POST /challenger (201)","description":"Issue a POST request on the `/challenger` end point, with no body, to create a new challenger session. Use the generated X-CHALLENGER header in future requests to track challenge completion.","status":true},{"id":"02","name":"GET /challenges (200)","description":"Issue a GET request on the `/challenges` end point","status":true},{"id":"03","name":"GET /todos (200)","description":"Issue a GET request on the `/todos` end point","status":false},{"id":"04","name":"GET /todo (404) not plural","description":"Issue a GET request on the `/todo` end point should 404 because nouns should be plural","status":false},{"id":"05","name":"GET /todos/{id} (200)","description":"Issue a GET request on the `/todos/{id}` end point to return a specific todo","status":false},{"id":"06","name":"GET /todos/{id} (404)","description":"Issue a GET request on the `/todos/{id}` end point for a todo that does not exist","status":false},{"id":"07","name":"HEAD /todos (200)","description":"Issue a HEAD request on the `/todos` end point","status":false},{"id":"08","name":"POST /todos (201)","description":"Issue a POST request to successfully create a todo","status":false},{"id":"09","name":"GET /todos (200) ?filter","description":"Issue a GET request on the `/todos` end point with a query filter to get only todos which are 'done'. There must exist both 'done' and 'not done' todos, to pass this challenge.","status":false},{"id":"10","name":"POST /todos (400) doneStatus","description":"Issue a POST request to create a todo but fail validation on the `doneStatus` field","status":false},{"id":"11","name":"POST /todos/{id} (200)","description":"Issue a POST request to successfully update a todo","status":false},{"id":"12","name":"DELETE /todos/{id} (200)","description":"Issue a DELETE request to successfully delete a todo","status":false},{"id":"13","name":"OPTIONS /todos (200)","description":"Issue an OPTIONS request on the `/todos` end point. You might want to manually check the 'Allow' header in the response is as expected.","status":false},{"id":"14","name":"GET /todos (200) XML","description":"Issue a GET request on the `/todos` end point with an `Accept` header of `application/xml` to receive results in XML format","status":false},{"id":"15","name":"GET /todos (200) JSON","description":"Issue a GET request on the `/todos` end point with an `Accept` header of `application/json` to receive results in JSON format","status":false},{"id":"16","name":"GET /todos (200) ANY","description":"Issue a GET request on the `/todos` end point with an `Accept` header of `*/*` to receive results in default JSON format","status":false},{"id":"17","name":"GET /todos (200) XML pref","description":"Issue a GET request on the `/todos` end point with an `Accept` header of `application/xml, application/json` to receive results in the preferred XML format","status":false},{"id":"18","name":"GET /todos (200) no accept","description":"Issue a GET request on the `/todos` end point with no `Accept` header present in the message to receive results in default JSON format","status":false},{"id":"19","name":"GET /todos (406)","description":"Issue a GET request on the `/todos` end point with an `Accept` header `application/gzip` to receive 406 'NOT ACCEPTABLE' status code","status":false},{"id":"20","name":"POST /todos XML","description":"Issue a POST request on the `/todos` end point to create a todo using Content-Type `application/xml`, and Accepting only XML ie. Accept header of `application/xml`","status":false},{"id":"21","name":"POST /todos JSON","description":"Issue a POST request on the `/todos` end point to create a todo using Content-Type `application/json`, and Accepting only JSON ie. Accept header of `application/json`","status":false},{"id":"22","name":"POST /todos (415)","description":"Issue a POST request on the `/todos` end point with an unsupported content type to generate a 415 status code","status":false},{"id":"23","name":"POST /todos XML to JSON","description":"Issue a POST request on the `/todos` end point to create a todo using Content-Type `application/xml` but Accept `application/json`","status":false},{"id":"24","name":"POST /todos JSON to XML","description":"Issue a POST request on the `/todos` end point to create a todo using Content-Type `application/json` but Accept `application/xml`","status":false},{"id":"25","name":"DELETE /heartbeat (405)","description":"Issue a DELETE request on the `/heartbeat` end point and receive 405 (Method Not Allowed)","status":false},{"id":"26","name":"PATCH /heartbeat (500)","description":"Issue a PATCH request on the `/heartbeat` end point and receive 500 (internal server error)","status":false},{"id":"27","name":"TRACE /heartbeat (501)","description":"Issue a TRACE request on the `/heartbeat` end point and receive 501 (Not Implemented)","status":false},{"id":"28","name":"GET /heartbeat (204)","description":"Issue a GET request on the `/heartbeat` end point and receive 204 when server is running","status":false},{"id":"29","name":"POST /secret/token (401)","description":"Issue a POST request on the `/secret/token` end point and receive 401 when Basic auth username/password is not admin/password","status":false},{"id":"30","name":"POST /secret/token (201)","description":"Issue a POST request on the `/secret/token` end point and receive 201 when Basic auth username/password is admin/password","status":false},{"id":"31","name":"GET /secret/note (403)","description":"Issue a GET request on the `/secret/note` end point and receive 403 when X-AUTH-TOKEN does not match a valid token","status":false},{"id":"32","name":"GET /secret/note (401)","description":"Issue a GET request on the `/secret/note` end point and receive 401 when no X-AUTH-TOKEN header present","status":false},{"id":"33","name":"GET /secret/note (200)","description":"Issue a GET request on the `/secret/note` end point receive 200 when valid X-AUTH-TOKEN used - response body should contain the note","status":false},{"id":"34","name":"POST /secret/note (200)","description":"Issue a POST request on the `/secret/note` end point with a note payload e.g. {\"note\":\"my note\"} and receive 200 when valid X-AUTH-TOKEN used. Note is maximum length 100 chars and will be truncated when stored.","status":false},{"id":"35","name":"POST /secret/note (401)","description":"Issue a POST request on the `/secret/note` end point with a note payload {\"note\":\"my note\"} and receive 401 when no X-AUTH-TOKEN present","status":false},{"id":"36","name":"POST /secret/note (403)","description":"Issue a POST request on the `/secret/note` end point with a note payload {\"note\":\"my note\"} and receive 403 when X-AUTH-TOKEN does not match a valid token","status":false},{"id":"37","name":"GET /secret/note (Bearer)","description":"Issue a GET request on the `/secret/note` end point receive 200 when using the X-AUTH-TOKEN value as an Authorization Bearer token - response body should contain the note","status":false},{"id":"38","name":"POST /secret/note (Bearer)","description":"Issue a POST request on the `/secret/note` end point with a note payload e.g. {\"note\":\"my note\"} and receive 200 when valid X-AUTH-TOKEN value used as an Authorization Bearer token. Status code 200 received. Note is maximum length 100 chars and will be truncated when stored.","status":false},{"id":"39","name":"DELETE /todos/{id} (200) all","description":"Issue a DELETE request to successfully delete the last todo in system so that there are no more todos in the system","status":false}]}